BACKUP ~EEex\backup~
AUTHOR ~Bubb~
VERSION 0.8.6

BEGIN ~EEex~
REQUIRE_PREDICATE (
	   (GAME_IS ~bgee~)
	OR (GAME_IS ~bg2ee~)
	OR (GAME_IS ~eet~)
	OR (GAME_IS ~iwdee~)
) ~Game not supported.~

	ACTION_FOR_EACH file IN ACTION OBJECT TRIGGER STATS BEGIN
		COPY ~EEex\patches\%file%.IDS~ ~EEex\patches~
			COUNT_2DA_ROWS 2 rows
			FOR (i = 0; i <= rows; ++i) BEGIN
				READ_2DA_ENTRY i 0 2 "col1"
				READ_2DA_ENTRY i 1 2 "col2"
				DEFINE_ASSOCIATIVE_ARRAY EEex_append_array BEGIN ~%file%~ , ~%col1%~ , ~%col2%~ => ~~ END
			END
		BUT_ONLY
	END
	ACTION_PHP_EACH EEex_append_array AS data => ~~ BEGIN
		APPEND ~%data%.IDS~ ~%data_1% %data_2%~ UNLESS ~^%data_1% ~
	END

	COPY_EXISTING ~ACTION.IDS~ ~override~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~473 EEex_MatchObject(S:Function\*)~ ~473 EEex_MatchObject(S:Function*)
473 EEex_MatchObjectEx(S:Function*,I:nNearest,I:range*,I:Flags*EEEX_MAT)~
		UNLESS ~473 EEex_MatchObjectEx~

	COPY_EXISTING ~TRIGGER.IDS~ ~override~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~0x4110 EEex_MatchObject(S:Function\*)~ ~0x4110 EEex_MatchObject(S:Function*)
0x4110 EEex_MatchObjectEx(S:Function*,I:nNearest,I:range*,I:Flags*EEEX_MAT)~
		UNLESS ~0x4110 EEex_MatchObjectEx~

	COPY_EXISTING ~UI.MENU~ ~override~ INSERT_FILE 0 ~EEex\patches\UI.MENU~ IF_EXISTS

	COPY ~EEex\loader~ ~.~ IF_EXISTS
	COPY ~EEex\copy~ ~override~ IF_EXISTS

	COPY_EXISTING ~exampl1.spl~ ~override~
		SAY NAME1 ~New Stoneskin Example~
		SAY UNIDENTIFIED_DESC ~This spell shows how you can use the EXSTONES function. Try casting it with:

C:Eval('ForceSpellRES(\"EXAMPL1\",Myself)',0)

This spell will absorb the next 3 instances of slashing, piercing, crushing, missile, nonlethal, or magic damage that would hit the character. Each time it absorbs one of these damage types, it deals 1 electricity damage to the attacker. When all 3 skins are used, the spell will then cast Fireball on the character.~

	COPY_EXISTING ~exampl2.spl~ ~override~
		SAY NAME1 ~Damage Reduction Example~
		SAY UNIDENTIFIED_DESC ~This spell shows how you can use the EXDAMRED function. Try casting it with:

C:Eval('ForceSpellRES(\"EXAMPL2\",Myself)',0)

This spell will absorb the first 5 damage of any instance of slashing, crushing, or nonlethal damage that would hit the creature. Once it has absorbed a total of 20 points of such damage, the spell ends. In addition, while the spell is active, it will also absorb the first 7 damage of any instance of missile or acid damage, and there's no limit to how much of this damage it can absorb. However, any magic damage that would be dealt to creature will be increased by 5.~

	COPY_EXISTING ~exampl3.spl~ ~override~
		SAY NAME1 ~Cowardice~
		SAY UNIDENTIFIED_DESC ~This spell shows how you can use action hooks. Try casting it with:

C:Eval('ForceSpellRES(\"EXAMPL3\",Myself)',0)

This spell will change the target's actions. Whenever the creature would attack a creature, they instead run away.~

	COPY_EXISTING ~exampl4.spl~ ~override~
		SAY NAME1 ~Passwall~
		SAY UNIDENTIFIED_DESC ~This spell shows how you can use the EXMODSMP function. Try adding it as a spell to a mage or bard in the party with this command:

C:Eval('AddSpecialAbility(\"EXAMPL4\")',0)

(This will let the character in the 1st portrait slot learn this spell as a 1st-level wizard spell.)

Target a point next to a wall with this spell, and it will allow characters to move through and see through the wall.~

	COPY_EXISTING ~exampl5.spl~ ~override~
		SAY NAME1 ~Spell Attack Roll Example~
		SAY UNIDENTIFIED_DESC ~This spell shows how you can use the EXSPLATK function. Try adding it as a spell to a mage or bard in the party with this command:

C:Eval('AddSpecialAbility(\"EXAMPL5\")',0)

(This will let the character in the 1st portrait slot learn this spell as a 1st-level wizard spell.)

This Magic Missile spell requires a spell attack roll to hit the target. Regular THAC0 bonuses make it more accurate, but THAC0 bonuses of equipped weapons or from proficiencies don't apply. However, the attack roll ignores the target's armor, and it is increased by the caster's Intelligence.~

	COPY_EXISTING ~exampl6.spl~ ~override~
		SAY NAME1 ~Widen Spell~
		SAY UNIDENTIFIED_DESC ~This metamagic shows how you can use the EXMODAOE function. Try adding it as an innate ability to a mage in the party with this command:

C:Eval('AddSpecialAbility(\"EXAMPL6\")',0)

(This will let the character in the 1st portrait slot learn this spell as an innate ability.)

After you use this ability, the next spell you cast within 2 rounds will have double the radius of its area of effect.~

	COPY_EXISTING ~exampl6.itm~ ~override~
		SAY NAME2 ~Staff of Widening~
		SAY IDENTIFIED_DESC ~This staff is an example of how you can use the EXMODAOE function. Create it with:

C:CreateItem('EXAMPL6')

STATISTICS:

Equipped abilities:
- Increases the area of effect of spells by 100%

THAC0: +1
Damage: 1d6+1 (crushing)
Speed Factor: 3
Proficiency Type: Quarterstaff
Type: Two-handed
Requires:
 5 Strength

Weight: 4~

	COPY_EXISTING ~excharge.itm~ ~override~
		SAY NAME2 ~Magical Electrifier~
		SAY IDENTIFIED_DESC ~This item is an example of how you can use the EXCHARGE function. Create it with:

C:CreateItem('EXCHARGE',20,0,0)

STATISTICS:

Using this item restores 5 charges to the item in your first quick item slot, up to the item's maximum number of charges. It can't increase the quantity of an item, only its charges.

Weight: 1~

	COPY_EXISTING ~exflameb.itm~ ~override~
		SAY NAME2 ~Real Sword of Flame~
		SAY IDENTIFIED_DESC ~This sword is an example of how you can use the EXDAMAGE function. Create it with:

C:CreateItem('EXFLAMEB')

The fire damage of this sword actually increases based on the wielder's Strength, long sword proficiency, and other damage bonuses from things like Gauntlets of Weapon Expertise.

STATISTICS:

THAC0: +1
Damage: 1d8+1 (fire)
Speed Factor: 3
Proficiency Type: Long Sword
Type: One-handed
Requires:
 6 Strength

Weight: 4~

	COPY_EXISTING ~exsta612.itm~ ~override~
		SAY NAME2 ~Amulet of Not Waking Sleepers~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 612. Create it with:

C:CreateItem('EXSTA612')

With this amulet equipped, your attacks will not wake up sleeping creatures.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta613.itm~ ~override~
		SAY NAME2 ~Amulet of Bypassing Mirror Image~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 613. Create it with:

C:CreateItem('EXSTA613')

With this amulet equipped, your attacks and spells will bypass Mirror Image.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta616.itm~ ~override~
		SAY NAME2 ~Amulet of Extra Spell Damage~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 616. Create it with:

C:CreateItem('EXSTA616')

With this amulet equipped, any fire, cold, electricity, acid, or magic damage dealt to an evil creature by your spells is increased by 5.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta617.itm~ ~override~
		SAY NAME2 ~Amulet of Fire Weapons~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 617. Create it with:

C:CreateItem('EXSTA617')

With this amulet equipped, the base damage of your weapons is converted to fire damage.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta619.itm~ ~override~
		SAY NAME2 ~Amulet of Spell Potency~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 619. Create it with:

C:CreateItem('EXSTA619')

With this amulet equipped, saving throws against your spells are made at an additional -20 penalty.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta620.itm~ ~override~
		SAY NAME2 ~Amulet of Healing~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 620. Create it with:

C:CreateItem('EXSTA620')

With this amulet equipped, your healing spells heal three times as many hit points.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta621.itm~ ~override~
		SAY NAME2 ~Amulet of Maximized Spells~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 621. Create it with:

C:CreateItem('EXSTA621')

With this amulet equipped, your spells will deal maximum damage.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta655.itm~ ~override~
		SAY NAME2 ~Amulet of Greater Dispelling~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 655. Create it with:

C:CreateItem('EXSTA655')

With this amulet equipped, you cast Dispel Magic as if 10 levels higher for purposes of the dispel check.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta658.itm~ ~override~
		SAY NAME2 ~Amulet of Summon Empowerment~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 658. Create it with:

C:CreateItem('EXSTA658')

With this amulet equipped, you will automatically cast Chaotic Commands on any creature you summon.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~exsta659.itm~ ~override~
		SAY NAME2 ~Amulet of Detect Magic~
		SAY IDENTIFIED_DESC ~This amulet is an example of the use of stat 659. Create it with:

C:CreateItem('EXSTA659')

For this amulet to function, you must set the "B3_EfMen" option in EEex_INI.lua to true, and set the variable B3EffectMenu_Stat_Required to true in B3_EfMen.lua to true. Then, as long as the amulet is equipped, you may see the spell effects currently on a character (e.g. Protection from Magical Weapons) by hovering the cursor over them and pressing Left Shift.

STATISTICS:

Weight: 3~

	COPY_EXISTING ~dmgtypes.2da~ ~override~
		READ_2DA_ENTRY 0 4 5 ex_fire_damage_strref
		READ_2DA_ENTRY 1 4 5 ex_piercing_damage_strref
		READ_2DA_ENTRY 2 4 5 ex_slashing_damage_strref
		READ_2DA_ENTRY 3 4 5 ex_crushing_damage_strref
		READ_2DA_ENTRY 4 4 5 ex_missile_damage_strref
		READ_2DA_ENTRY 5 4 5 ex_electricity_damage_strref
		READ_2DA_ENTRY 6 4 5 ex_cold_damage_strref
		READ_2DA_ENTRY 7 4 5 ex_magic_damage_strref
		READ_2DA_ENTRY 8 4 5 ex_acid_damage_strref
		READ_2DA_ENTRY 9 4 5 ex_poison_damage_strref
		READ_2DA_ENTRY 10 4 5 ex_magicfire_damage_strref
		READ_2DA_ENTRY 11 4 5 ex_magiccold_damage_strref
		READ_2DA_ENTRY 12 4 5 ex_stunning_damage_strref
		BUT_ONLY_IF_IT_CHANGES

	OUTER_SET ex_modify_spell_memory_strref_1 = RESOLVE_STR_REF(~Regained spell: <EX_SPNAME>~)
	OUTER_SET ex_modify_spell_memory_strref_2 = RESOLVE_STR_REF(~Lost spell: <EX_SPNAME>~)
	OUTER_SET ex_damage_reduction_feedback_strref = RESOLVE_STR_REF(~<EX_DAMRED>~)
	OUTER_SET ex_damage_absorption_feedback_strref = RESOLVE_STR_REF(~<EX_DAMABS>~)
	OUTER_SET ex_spell_attack_feedback_strref = RESOLVE_STR_REF(~<EX_SPLATK>~)

	COPY_EXISTING ~m__exstr.lua~ ~override~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_modify_spell_memory_strref_1 *= *0~ ~ex_modify_spell_memory_strref_1 = %ex_modify_spell_memory_strref_1%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_modify_spell_memory_strref_2 *= *0~ ~ex_modify_spell_memory_strref_2 = %ex_modify_spell_memory_strref_2%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_slashing_damage_strref *= *0~ ~ex_slashing_damage_strref = %ex_slashing_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_piercing_damage_strref *= *0~ ~ex_piercing_damage_strref = %ex_piercing_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_crushing_damage_strref *= *0~ ~ex_crushing_damage_strref = %ex_crushing_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_missile_damage_strref *= *0~ ~ex_missile_damage_strref = %ex_missile_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_stunning_damage_strref *= *0~ ~ex_stunning_damage_strref = %ex_stunning_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_fire_damage_strref *= *0~ ~ex_fire_damage_strref = %ex_fire_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_cold_damage_strref *= *0~ ~ex_cold_damage_strref = %ex_cold_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_electricity_damage_strref *= *0~ ~ex_electricity_damage_strref = %ex_electricity_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_acid_damage_strref *= *0~ ~ex_acid_damage_strref = %ex_acid_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_poison_damage_strref *= *0~ ~ex_poison_damage_strref = %ex_poison_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_magic_damage_strref *= *0~ ~ex_magic_damage_strref = %ex_magic_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_magicfire_damage_strref *= *0~ ~ex_magicfire_damage_strref = %ex_magicfire_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_magiccold_damage_strref *= *0~ ~ex_magiccold_damage_strref = %ex_magiccold_damage_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_damage_reduction_feedback_strref *= *0~ ~ex_damage_reduction_feedback_strref = %ex_damage_reduction_feedback_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_damage_absorption_feedback_strref *= *0~ ~ex_damage_absorption_feedback_strref = %ex_damage_absorption_feedback_strref%~
		REPLACE_TEXTUALLY CASE_INSENSITIVE ~ex_spell_attack_feedback_strref *= *0~ ~ex_spell_attack_feedback_strref = %ex_spell_attack_feedback_strref%~

BEGIN ~Make it possible to add new thieving skills to the game (only install if you're going to install a mod that adds new thieving skills)~ REQUIRE_COMPONENT ~EEex.tp2~ ~0~ ~This component requires the main component to be installed.~
	INCLUDE ~EEex/components/ExtendedSkills.tpa~

BEGIN ~Make it possible to reach over 127% or under -128% resistance, and make it so a creature's spell is not interrupted by damage if the creature takes no damage~ REQUIRE_COMPONENT ~EEex.tp2~ ~0~ ~This component requires the main component to be installed.~
	INCLUDE ~EEex/components/DamageAbsorption.tpa~